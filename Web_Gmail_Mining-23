{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "0a069a9c-287a-4463-910b-65c93bb43ad8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "From: Infosys Springboard <noreply_infyspringboard@onwingspan.com>\n",
      "Subject: Link Google\n",
      "--------------------------------------------------\n",
      "From: Naukri Campus  <eventnc@naukri.com>\n",
      "Subject: Nivea & Godrej invite you to AINCAT'25\n",
      "--------------------------------------------------\n",
      "From: redBus\n",
      "Subject: Save on Hotel stays with the Red Hot Summer Sale ! üôå\n",
      "--------------------------------------------------\n",
      "From: Sarah from pdfFiller <sarah@pdffiller.com>\n",
      "Subject: Discover the fastest way to share your PDFs\n",
      "--------------------------------------------------\n",
      "From: LinkedIn Job Alerts <jobalerts-noreply@linkedin.com>\n",
      "Subject: ‚Äúdata scientist‚Äù: Insight Global - Data Scientist and more\n",
      "--------------------------------------------------\n",
      "From: LinkedIn Job Alerts <jobalerts-noreply@linkedin.com>\n",
      "Subject: ‚Äúdata scientist‚Äù: Insight Global - Data Scientist and more\n",
      "--------------------------------------------------\n",
      "From: Naukri Campus <notifync@naukri.com>\n",
      "Subject: What the buzz was all about this month? Check out now!\n",
      "--------------------------------------------------\n",
      "From: Naukri Campus  <eventnc@naukri.com>\n",
      "Subject: Nivea & Godrej invite you to AINCAT'25\n",
      "--------------------------------------------------\n",
      "From: noreplyinfyspringboard@onwingspan.com\n",
      "Subject: Your Certificate \"Introduction to Python\" is ready for download\n",
      "--------------------------------------------------\n",
      "From: LinkedIn Job Alerts <jobalerts-noreply@linkedin.com>\n",
      "Subject: ‚Äúdata scientist‚Äù: PD Consulting - Full-stack data scientist (co-founder) (equity only - no compensation)\n",
      "--------------------------------------------------\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "('BYE', [b'LOGOUT Requested'])"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import imaplib\n",
    "import email\n",
    "from email.header import decode_header\n",
    "\n",
    "# Login credentials\n",
    "\n",
    "USERNAME = 'ajeebagani@gmail.com'\n",
    "PASSWORD = 'gsql mmyl igry fqhc'  # Use App Password if 2FA is enabled\n",
    "\n",
    "# Connect to the Gmail IMAP server\n",
    "imap_server = 'imap.gmail.com'\n",
    "mail = imaplib.IMAP4_SSL(imap_server)\n",
    "\n",
    "# Login to the server\n",
    "mail.login(USERNAME, PASSWORD)\n",
    "\n",
    "# Select the mailbox you want to mine ('inbox' by default)\n",
    "mail.select(\"inbox\")\n",
    "\n",
    "# Search for all emails\n",
    "status, messages = mail.search(None, 'ALL')\n",
    "email_ids = messages[0].split()\n",
    "\n",
    "# Number of emails to process\n",
    "N = 10\n",
    "for i in email_ids[-N:]:\n",
    "    # Fetch the email by ID\n",
    "    res, msg = mail.fetch(i, \"(RFC822)\")\n",
    "    for response in msg:\n",
    "        if isinstance(response, tuple):\n",
    "            # Parse email bytes to message\n",
    "            msg = email.message_from_bytes(response[1])\n",
    "\n",
    "            # Decode subject\n",
    "            subject, encoding = decode_header(msg[\"Subject\"])[0]\n",
    "            if isinstance(subject, bytes):\n",
    "                subject = subject.decode(encoding or \"utf-8\")\n",
    "\n",
    "            # Decode sender\n",
    "            from_, encoding = decode_header(msg.get(\"From\"))[0]\n",
    "            if isinstance(from_, bytes):\n",
    "                from_ = from_.decode(encoding or \"utf-8\")\n",
    "\n",
    "            print(\"From:\", from_)\n",
    "            print(\"Subject:\", subject)\n",
    "            print(\"-\" * 50)\n",
    "\n",
    "# Logout\n",
    "mail.logout()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1fc3679c-e99e-4bd5-a522-c03af4162272",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
